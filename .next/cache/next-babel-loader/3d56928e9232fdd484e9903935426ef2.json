{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jungb\\\\Documents\\\\DEV\\\\Nodejs\\\\my-lab\\\\components\\\\CurrencyInput\\\\index.js\";\nimport { useState } from 'react';\nimport { InputNumber } from 'antd';\n\nconst currencyFormatter = value => {\n  return new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(value);\n};\n\nconst CurrencyInput = props => {\n  const {\n    defaultValue\n  } = props;\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState(defaultValue || 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n      style: {\n        width: 400,\n        marginLeft: \"1rem\"\n      },\n      formatter: () => currencyFormatter(inputValue),\n      onChange: value => setInputValue(parseFloat(value.toString().replace(/[^\\d]/g, '').replace(/(\\d\\d?)$/, '.$1')).toFixed(2)),\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), inputValue]\n  }, void 0, true);\n};\n\nexport default CurrencyInput;","map":{"version":3,"sources":["C:/Users/jungb/Documents/DEV/Nodejs/my-lab/components/CurrencyInput/index.js"],"names":["useState","InputNumber","currencyFormatter","value","Intl","NumberFormat","style","currency","format","CurrencyInput","props","defaultValue","inputValue","setInputValue","width","marginLeft","parseFloat","toString","replace","toFixed"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,MAA5B;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AACjC,SAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACpCC,IAAAA,KAAK,EAAE,UAD6B;AAEpCC,IAAAA,QAAQ,EAAE;AAF0B,GAA/B,EAGJC,MAHI,CAGGL,KAHH,CAAP;AAID,CALD;;AAOA,MAAMM,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AACA,QAAM;AAAA,OAAEE,UAAF;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAACW,YAAY,IAAI,CAAjB,CAA9C;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,KAAK,EAAE;AACLG,QAAAA,KAAK,EAAE,GADF;AAELC,QAAAA,UAAU,EAAE;AAFP,OADT;AAKE,MAAA,SAAS,EAAE,MAAMb,iBAAiB,CAACU,UAAD,CALpC;AAME,MAAA,QAAQ,EAAET,KAAK,IAAIU,aAAa,CAACG,UAAU,CAACb,KAAK,CAACc,QAAN,GAAiBC,OAAjB,CAAyB,QAAzB,EAAkC,EAAlC,EAAsCA,OAAtC,CAA8C,UAA9C,EAAyD,KAAzD,CAAD,CAAV,CAA4EC,OAA5E,CAAoF,CAApF,CAAD,CANlC;AAOE,MAAA,KAAK,EAAEP;AAPT;AAAA;AAAA;AAAA;AAAA,YADF,EAUIA,UAVJ;AAAA,kBADF;AAcD,CAlBD;;AAoBA,eAAeH,aAAf","sourcesContent":["import { useState } from 'react'\r\nimport { InputNumber } from 'antd'\r\n\r\nconst currencyFormatter = value => {\r\n  return new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL'\r\n  }).format(value);\r\n};\r\n\r\nconst CurrencyInput = (props) => {\r\n  const { defaultValue } = props\r\n  const [ inputValue, setInputValue ] = useState(defaultValue || 0)\r\n\r\n  return (\r\n    <>\r\n      <InputNumber\r\n        style={{\r\n          width: 400,\r\n          marginLeft: \"1rem\"\r\n        }}\r\n        formatter={() => currencyFormatter(inputValue)}\r\n        onChange={value => setInputValue(parseFloat(value.toString().replace(/[^\\d]/g,'').replace(/(\\d\\d?)$/,'.$1')).toFixed(2))}\r\n        value={inputValue}\r\n      />\r\n      { inputValue }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrencyInput"]},"metadata":{},"sourceType":"module"}