{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jungb\\\\Documents\\\\DEV\\\\Nodejs\\\\my-lab\\\\components\\\\CurrencyInput\\\\index.js\",\n    _this = this;\n\nimport { InputNumber } from 'antd';\n\nvar currencyFormatter = function currencyFormatter(value) {\n  return new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(value);\n};\n\nvar currencyParser = function currencyParser(val) {\n  try {\n    if (typeof val === \"string\" && !val.length) val = \"0,0\";\n    var group = '.';\n    var decimal = ',';\n    var reversedVal = val.replace(/[^0-9\\.|\\,]/g, \"\");\n    reversedVal = reversedVal.replace(new RegExp(\"\\\\\" + group, \"g\"), \"\");\n    reversedVal = reversedVal.replace(new RegExp(\"\\\\\" + decimal, \"g\"), \".\");\n    return Number.isNaN(reversedVal) ? 0 : reversedVal;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nvar CurrencyInput = function CurrencyInput() {\n  return /*#__PURE__*/_jsxDEV(InputNumber, {\n    defaultValue: 150,\n    style: {\n      width: 400,\n      marginLeft: \"1rem\"\n    },\n    step: 0.1,\n    formatter: currencyFormatter,\n    parser: currencyParser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CurrencyInput;\nexport default CurrencyInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyInput\");","map":{"version":3,"sources":["C:/Users/jungb/Documents/DEV/Nodejs/my-lab/components/CurrencyInput/index.js"],"names":["InputNumber","currencyFormatter","value","Intl","NumberFormat","style","currency","format","currencyParser","val","length","group","decimal","reversedVal","replace","RegExp","Number","isNaN","error","console","CurrencyInput","width","marginLeft"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,MAA5B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AACjC,SAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACpCC,IAAAA,KAAK,EAAE,UAD6B;AAEpCC,IAAAA,QAAQ,EAAE;AAF0B,GAA/B,EAGJC,MAHI,CAGGL,KAHH,CAAP;AAID,CALD;;AAOA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAI;AAC5B,MAAI;AAEF,QAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACA,GAAG,CAACC,MAApC,EACED,GAAG,GAAG,KAAN;AAEF,QAAIE,KAAK,GAAG,GAAZ;AACA,QAAIC,OAAO,GAAG,GAAd;AACA,QAAIC,WAAW,GAAGJ,GAAG,CAACK,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAAlB;AACAD,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,IAAIC,MAAJ,CAAW,OAAOJ,KAAlB,EAAyB,GAAzB,CAApB,EAAmD,EAAnD,CAAd;AACAE,IAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,IAAIC,MAAJ,CAAW,OAAOH,OAAlB,EAA2B,GAA3B,CAApB,EAAqD,GAArD,CAAd;AAEA,WAAOI,MAAM,CAACC,KAAP,CAAaJ,WAAb,IAA4B,CAA5B,GAAgCA,WAAvC;AACD,GAZD,CAYE,OAAOK,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,CAhBD;;AAkBA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBACE,QAAC,WAAD;AACE,IAAA,YAAY,EAAE,GADhB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,UAAU,EAAE;AAFP,KAFT;AAME,IAAA,IAAI,EAAE,GANR;AAOE,IAAA,SAAS,EAAErB,iBAPb;AAQE,IAAA,MAAM,EAAEO;AARV;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAbD;;KAAMY,a;AAeN,eAAeA,aAAf","sourcesContent":["import { InputNumber } from 'antd'\r\n\r\nconst currencyFormatter = value => {\r\n  return new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL'\r\n  }).format(value);\r\n};\r\n\r\nconst currencyParser = val => {\r\n  try {\r\n    \r\n    if (typeof val === \"string\" && !val.length)\r\n      val = \"0,0\";\r\n\r\n    let group = '.';\r\n    let decimal = ',';\r\n    let reversedVal = val.replace(/[^0-9\\.|\\,]/g, \"\");\r\n    reversedVal = reversedVal.replace(new RegExp(\"\\\\\" + group, \"g\"), \"\");\r\n    reversedVal = reversedVal.replace(new RegExp(\"\\\\\" + decimal, \"g\"), \".\");\r\n\r\n    return Number.isNaN(reversedVal) ? 0 : reversedVal;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst CurrencyInput = () => {\r\n  return (\r\n    <InputNumber\r\n      defaultValue={150}\r\n      style={{\r\n        width: 400,\r\n        marginLeft: \"1rem\"\r\n      }}\r\n      step={0.1}\r\n      formatter={currencyFormatter}\r\n      parser={currencyParser}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CurrencyInput"]},"metadata":{},"sourceType":"module"}